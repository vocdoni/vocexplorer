pre {
  -moz-tab-size: 2;
  -webkit-tab-size: 2;
  tab-size: 2;
}

main {
  min-height: 100vh;

  > div > progress {
    width: 100%;
    height: 2px;
    vertical-align: top;
  }
}

.contents-loader {
  text-align: center;
  align-content: center;
  align-items: center;
  height: 100vh;
  display: flex;
  > div {
    flex: 1;
  }
}

.container > section {
  &:first-of-type {
    @extend .mt-3;
  }
  + section {
    @extend .mt-3;
  }
}

.block-tile + .block-tile {
  margin-top: 15px;
}

.card-header > a {
  color: $card-cap-color;
  font-weight: bold;
}

.list.paginated .paginated-card {
  @extend .col-12;

  + .paginated-card {
    @extend .mt-3;
  }
}

.responsive-card-deck {
  @extend .row;
  .card-deck-col {
    @extend .col-12;
    @extend .col-lg-3;
    + .card-deck-col {
      @extend .mt-3;
      @extend .mt-lg-0;
    }
  }

  .recent-blocks & {
    font-size: $font-size-xxs;
  }

  .card dl {
    font-size: $font-size-xs;
    flex-direction: column;
    dd,
    dt {
      @extend .col-12;
    }
  }
}

@mixin tile-color($color) {
  border-left-color: $color;
  .type > div {
    color: darken($color, 10%);
  }
}

@mixin desktop-tile-color($color) {
  .type > div {
    background-color: lighten($color, 40%);
    border: 1px solid $color;
  }
}

// tile are the long cards with a colored side
.tile {
  border-radius: 5px;
  font-size: $font-size-xs;
  padding: 1rem;
  min-height: 3.5rem;

  border: 1px solid $gray-400;
  border-left: 4px solid $green;

  &.addProcessKeys {
    @include tile-color($cyan);
  }

  &.revealProcessKeys {
    @include tile-color($teal);
  }

  &.newProcess,
  &.paused {
    @include tile-color(lighten($gray-600, 5%));
  }
  &.cancelProcess,
  &.canceled {
    @include tile-color($yellow);
  }

  @media (min-width: map-get($grid-breakpoints, "md")) {
    padding: 0;

    // Green by default
    .type > div {
      background-color: lighten($green, 40%);
      border: 1px solid $green;
      margin-top: -1px;
      margin-bottom: -1px;
    }

    &.addProcessKeys {
      @include desktop-tile-color($cyan);
    }
    &.revealProcessKeys {
      @include desktop-tile-color($teal);
    }
    &.cancelProcess,
    &.canceled {
      @include desktop-tile-color($yellow);
    }
    &.newProcess,
    &.paused {
      @include desktop-tile-color(lighten($gray-600, 5%));
    }
  }

  .tile-body {
    @extend .row;
  }

  + .tile {
    margin-top: 1rem;
  }
  @media (min-width: map-get($grid-breakpoints, "md")) {
    .type > div,
    .contents > div,
    .details > div {
      padding: 1rem;
    }
  }

  .type {
    @extend .col-md-2;
    @extend .d-flex;
    word-wrap: anywhere;
    color: darken($green, 18%);

    > div {
      flex: 1;
      justify-content: center;
      @extend .d-flex;
      @extend .flex-column;
      @extend .align-items-md-center;
    }

    .title {
      font-weight: bold;
    }
  }

  .contents {
    @extend .col-md-7;
    @extend .col-lg-8;
    @extend .d-flex;
    @extend .flex-column;
    @extend .mt-3;
    @extend .mt-md-0;
  }

  .details {
    @extend .col-md-3;
    @extend .col-lg-2;
    @extend .d-flex;
    @extend .flex-row;
    @extend .flex-md-column;
    @extend .flex-nowrap;
    @extend .justify-content-md-center;
    @extend .text-md-right;
    @extend .mt-3;
    @extend .mt-md-0;
  }
}

.pagination-wrapper {
  @extend .flex-row;
  @extend .flex-column;
  @extend .flex-md-row;
  @extend .d-flex;
  @extend .flex-nowrap;
  @extend .justify-content-between;
  margin-bottom: 0.75rem;

  .page-count,
  .pagination-searchbar,
  .pagination {
    @extend .d-flex;
    @extend .align-items-center;
    margin-bottom: 0;
  }

  .page-count {
    order: 2;
  }

  .pagination-searchbar input {
    order: 1;
    @extend .form-control;
  }

  .pagination {
    order: 3;
  }
}

.card {
  dl,
  .detail {
    @extend .row;

    dt {
      @extend .col-sm-3;
    }
    dd {
      @extend .col-sm-9;
    }
  }

  // cnc stands for card in card ;)
  .card {
    border-radius: $cnc-border-radius;
    background: $cnc-bg;
  }
}

.card-body {
  // Tabs menu
  > nav:first-child {
    margin-left: -$card-spacer-x;
    margin-top: -$card-spacer-x;
    margin-right: -$card-spacer-x;

    ul {
      padding: 0;
      padding-bottom: 0;

      @extend .nav;
      @extend .nav-tabs;
      @extend .flex-column;
      @extend .flex-sm-row;

      li {
        @extend .nav-item;
        @extend .p-sm-0;
        @extend .mr-sm-2;
        @extend .d-flex;
        @extend .d-sm-inline-block;
        margin-bottom: 0;

        + li {
          button {
            border-top-color: transparent;
          }
        }

        a,
        button,
        &:last-child button {
          @extend .col-12;
          @extend .nav-link;
          border-radius: 0;
          border-color: $gray-200;
          background-color: lighten($gray-100, 1%);
          border-bottom: 1px solid $gray-200;
          color: $gray-600;

          &:hover,
          &:focus,
          &:active {
            border-color: $gray-500;
            color: $brand-color;
          }

          &.active {
            background-color: white;
            color: $brand-color;
          }
        }

        &:last-child button/* ,
        button.active  */ {
          border-bottom-color: transparent;
        }
      }
      @media (min-width: map-get($grid-breakpoints, "sm")) {
        padding: $card-spacer-x;
        padding-bottom: 0;
        li {
          margin-bottom: -1px;
          a,
          button,
          + li button,
          button.active,
          &:last-child button {
            border-top-left-radius: $nav-tabs-border-radius;
            border-top-right-radius: $nav-tabs-border-radius;
            border-color: $nav-tabs-link-active-border-color;
            border-bottom: none;
          }
          button.active {
            border-bottom: none !important;
          }
        }
      }
    }
  }
  .tabs-content {
    margin-top: 1rem;
  }
}

.card-body pre {
  padding: 1rem;
  margin: 0;
  background-color: #f8f9fa;
  color: #6c757d;

  &.empty {
    text-align: center;
    font-family: $font-family-base;
  }
}

// detail view of entities (blocks, transactions.. whatever)
.details-view {
  h1 {
    font-size: $h4-font-size;
  }
  h2 {
    font-size: $h6-font-size;
  }

  .card {
    @extend .mb-3;
    @extend .mb-md-5;

    &.validator {
      @extend .flex-grow-1;
    }

    dl {
      font-size: $font-size-xs;
    }
  }

  .badge {
    &.active {
      @extend .badge-success;
    }
    &.canceled {
      @extend .badge-warning;
    }
  }

  .main-column {
    @extend .col-md-12;
    @extend .col-lg-8;
    @extend .pr-lg-0;

    .card {
      @extend .mr-lg-5;
    }

    .details {
      font-size: $font-size-xs;

      @extend .d-flex;
      @extend .justify-content-start;
      @extend .flex-column;
      @extend .flex-md-row;
      @extend .text-muted;
      > span {
        @extend .mr-4;

        &:last-of-type {
          @extend .mr-0;
        }
      }
    }
  }

  .extra-column {
    @extend .col-md-12;
    @extend .col-lg-4;
    @extend .d-flex;
    @extend .flex-column;
    @extend .flex-md-row;
    @extend .flex-lg-column;
    @extend .pl-lg-0;
  }

  &.no-column {
    .main-column {
      @extend .col-12;
      padding-right: $grid-gutter-width / 2 !important;
      .card {
        @extend .mr-0;
      }
    }
  }
}

.dt {
  @extend dt;
}

.dd {
  @extend dd;
}

.jumbo-stats {
  > div::before {
    content: " ";
    width: 3px;
    background-color: $brand-color;
    border-radius: 3px;
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    top: 0;
  }
  .stat-title {
    font-size: $font-size-sm;
  }

  .stat-value {
    font-size: $font-size-lg;
  }
}

.navbar-collapse form.form-inline .input-group {
  width: 100%;
}

.input-group {
  & > input {
    font-size: $font-size-xs;
  }
  button {
    position: relative;

    .icon-lens {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
    }
  }
}

.poll-results {
  @extend .row;
  > div {
    @extend .col-12;
    @extend .col-md-3;
    border-bottom: 1px solid $gray-200;
    margin-bottom: $card-spacer-x;
  }
  .question {
    display: block;
    background: lighten($brand-color, 70%);
    color: $brand-color;
    padding: 0.5rem 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
  }
  ol {
    list-style-type: lower-latin;
    padding-left: 2rem;
  }
  @media (min-width: map-get($grid-breakpoints, "md")) {
    > div {
      border-bottom: none;
    }
  }
}

.icon-lens::before {
  content: "";
  display: inline-block;
  background-image: $icon-lens;
  background-repeat: no-repeat;
  background-size: 1rem 1rem;
  background-position: center;
  width: 100%;
  height: 100%;
}

footer {
  @extend .navbar;
  @extend .navbar-expand-lg;
  @extend .navbar-dark;
  @extend .bg-dark;

  margin-top: 50px;
  padding: 50px 20px 30px;

  div {
    flex-direction: column;
  }

  p {
    width: 100%;
    text-align: center;
  }

  a {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}

.stats {
  @extend .table;
  .row {
    @extend tr;
    .data {
      @extend td;
    }
    .head {
      font-weight: bold;
      @extend th;
    }
  }
}
