stages:
  - build
  - test
  - release

variables:
  # DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  VOCEXPLORER_BUILD_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  VOCEXPLORER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}:latest

  GOPATH: ${CI_PROJECT_DIR}/.cache/gopath # to cache Go module downloads
  GOCACHE: ${CI_PROJECT_DIR}/.cache/gocache # to cache Go build archives
  GOFLAGS: -mod=readonly

cache:
  key: ${CI_JOB_NAME} # separate caches by job, but not by branch
  paths:
    - .cache/

go-test:
  image: golang:1.14.4
  stage: test
  script:
    - echo Tests not available yet!
    # - go test -vet=off -timeout=1m ./...
  only:
    - merge_requests
    - branches

go-analyze:
  image: golang:1.15.2
  stage: test
  tags:
    - vocdoni
  script:
    - diff -u <(echo -n) <(gofmt -s -d $(git ls-files '*.go'))
    - go vet ./...
    - curl -L https://github.com/dominikh/go-tools/releases/download/2020.1.5/staticcheck_linux_amd64.tar.gz | tar -xzf -
    - ./staticcheck/staticcheck ./...
  only:
    - merge_requests
    - branches



docker-release:
  image: docker:stable
  services:
    - docker:dind
  stage: release
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t ${VOCEXPLORER_BUILD_IMAGE} .
    - docker tag ${VOCEXPLORER_BUILD_IMAGE} ${VOCEXPLORER_RELEASE_IMAGE}
    - docker push ${VOCEXPLORER_BUILD_IMAGE}
    - docker push ${VOCEXPLORER_RELEASE_IMAGE}
  only:
    - master
    - stage
    - /^release-.*$/
